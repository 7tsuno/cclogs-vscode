name: Build Extension

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to build (e.g., 1.0.1)'
        required: true
        default: '1.0.0'
      create_release:
        description: 'Create GitHub Release'
        type: boolean
        default: true

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          
      - name: Update version in package.json
        if: github.event_name == 'workflow_dispatch'
        run: |
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          if [ "$CURRENT_VERSION" != "${{ github.event.inputs.version }}" ]; then
            npm version ${{ github.event.inputs.version }} --no-git-tag-version
            cd webview && npm version ${{ github.event.inputs.version }} --no-git-tag-version
          else
            echo "Version is already ${{ github.event.inputs.version }}, skipping version update"
          fi
          
      - name: Install dependencies
        run: |
          npm install
          cd webview && npm install
          
      - name: Build extension
        run: npm run compile
        
      - name: Package extension
        run: |
          npm install -g @vscode/vsce
          vsce package
          
      - name: Upload VSIX as artifact
        uses: actions/upload-artifact@v4
        with:
          name: extension-vsix-${{ github.event.inputs.version || github.ref_name }}
          path: '*.vsix'
          
      - name: Create Release
        if: github.event.inputs.create_release == 'true' || startsWith(github.ref, 'refs/tags/v')
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.event.inputs.version && format('v{0}', github.event.inputs.version) || github.ref_name }}
          name: ${{ github.event.inputs.version && format('v{0} - Claude Code Logs Viewer', github.event.inputs.version) || github.ref_name }}
          files: '*.vsix'
          body: |
            ## Claude Code Logs Viewer ${{ github.event.inputs.version || github.ref_name }}

            A VS Code extension for viewing Claude Code conversation logs in a clean, organized interface.

            ### Features
            - **Conversation Log Display**: View Claude Code logs stored in `~/.claude/projects`
            - **Log Search**: Search across all log files by content or date range
            - **In-Conversation Search**: Search within individual conversations using the search dialog
            - **Session Resume**: Resume sessions directly from the log details view with a single button click

            ### Installation
            1. Download the `.vsix` file below
            2. Open Command Palette in VS Code (`Ctrl+Shift+P` / `Cmd+Shift+P`)
            3. Select `Extensions: Install from VSIX...`
            4. Choose the downloaded `.vsix` file
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}